[{"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\index.tsx":"1","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\App.tsx":"2","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\SidebarNav.tsx":"3","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\Constants.ts":"4","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\CollapsibleSidebarTrigger.tsx":"5","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\HeaderNav.tsx":"6","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Card\\FlatCard.tsx":"7","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\Table.tsx":"8","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\DataFilter.tsx":"9","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\CardCollection.tsx":"10","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\Collection.tsx":"11","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Card\\index.ts":"12","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\index.ts":"13","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\index.ts":"14","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\GlobalStyle.ts":"15","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\index.ts":"16"},{"size":198,"mtime":1610858916075,"results":"17","hashOfConfig":"18"},{"size":3572,"mtime":1611072910537,"results":"19","hashOfConfig":"18"},{"size":3376,"mtime":1610980899131,"results":"20","hashOfConfig":"18"},{"size":1329,"mtime":1610977698668,"results":"21","hashOfConfig":"18"},{"size":408,"mtime":1610960105654,"results":"22","hashOfConfig":"18"},{"size":663,"mtime":1610885355769,"results":"23","hashOfConfig":"18"},{"size":1615,"mtime":1610982703622,"results":"24","hashOfConfig":"18"},{"size":6430,"mtime":1611039461998,"results":"25","hashOfConfig":"18"},{"size":1868,"mtime":1610976591441,"results":"26","hashOfConfig":"18"},{"size":3454,"mtime":1611066996046,"results":"27","hashOfConfig":"18"},{"size":3955,"mtime":1611072842334,"results":"28","hashOfConfig":"18"},{"size":49,"mtime":1610978901978,"results":"29","hashOfConfig":"18"},{"size":260,"mtime":1611024245254,"results":"30","hashOfConfig":"18"},{"size":237,"mtime":1610979067106,"results":"31","hashOfConfig":"18"},{"size":1771,"mtime":1610978802978,"results":"32","hashOfConfig":"18"},{"size":108,"mtime":1610979299157,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"gbuy84",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\index.tsx",[],["69","70"],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\App.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\SidebarNav.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\Constants.ts",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\CollapsibleSidebarTrigger.tsx",["71"],"import * as React from 'react';\r\n\r\ninterface ICollapsibleSidebarTriggerProps {\r\n    sidebarId: string;\r\n}\r\n\r\nconst CollapsibleSidebarTrigger: React.FunctionComponent<ICollapsibleSidebarTriggerProps> = (props) => {\r\n    return (\r\n        <a href=\"#\" data-target={props.sidebarId} className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n    );\r\n};\r\n\r\nexport default CollapsibleSidebarTrigger;\r\n","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\HeaderNav.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Card\\FlatCard.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\Table.tsx",["72","73","74"],"import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash';\r\nimport FlatCard from '../Card/FlatCard';\r\nimport Constants from '../Shared/Constants';\r\n\r\n\r\n//#region Styles\r\nconst StyledTable = styled.table`\r\n    border-radius: ${Constants.borderRadius} !important;\r\n    tbody > tr:last-child {\r\n        border-bottom: none;\r\n    }\r\n`;\r\n\r\nconst PaginationDiv = styled.div`\r\n    margin-bottom: 0 !important;\r\n    margin-left: 0 !important;\r\n    margin-right: 0 !important;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n    & li {\r\n    } & li.active {\r\n        background-color: ${Constants.hoverColor};\r\n        & a { color: ${Constants.alternateColor}; }\r\n        pointer-events: none;\r\n    } & select {\r\n        padding: 2px;\r\n        height: 100%;\r\n        font-size: 92%;\r\n        border: 1px solid ${Constants.flatCardBorderColor};\r\n    } & > li > span {\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n    } & .disabled {\r\n        pointer-events: none;\r\n    }\r\n`;\r\n//#endregion\r\n\r\nenum RowsPerPage {\r\n    Twenty = 20,\r\n    Fifty = 50,\r\n    OneHundred = 100,\r\n  }\r\n\r\nexport interface Schema<T> {\r\n    label: string;\r\n    value(data: T): React.ReactNode | React.ReactElement;\r\n    index: number;\r\n}\r\n\r\ninterface ITableProps<T> {\r\n    title: string;\r\n    dataSource: T[],\r\n    schema: Schema<T>[],\r\n}\r\n\r\ninterface ITableState {\r\n    totalPages: number;\r\n    displayDataIndex: { startIndex: number, endIndex: number };\r\n    currentPageNumber: number;\r\n    rowsPerPage: number;\r\n}\r\n\r\nexport default class Table<T extends object> extends React.Component<ITableProps<T>, ITableState> {\r\n    constructor(props: ITableProps<T>) {\r\n        super(props);\r\n\r\n        const rowsPerPage = RowsPerPage.Twenty;\r\n        const totalPages = Math.ceil(this.props.dataSource.length / rowsPerPage);\r\n        const currentPageNumber = 1;\r\n\r\n        this.state = {\r\n            rowsPerPage,\r\n            totalPages,\r\n            currentPageNumber,\r\n            displayDataIndex: this.getDisplayDataIndex(currentPageNumber, rowsPerPage),\r\n        };\r\n    }\r\n\r\n    getDisplayDataIndex(currentPageNumber: number, rowsPerPage: RowsPerPage, ) {\r\n        const startIndex = rowsPerPage * (currentPageNumber - 1);\r\n        let endIndex = startIndex + (rowsPerPage - 1);\r\n\r\n        const totalRows = this.props.dataSource.length;\r\n\r\n        if(totalRows < endIndex) {  endIndex = totalRows - 1; }\r\n\r\n        return { startIndex, endIndex };\r\n    }\r\n\r\n    onRowsPerPageChange(rowsPerPage: RowsPerPage) {\r\n        this.setState({\r\n            currentPageNumber: 1,\r\n            rowsPerPage,\r\n            totalPages: Math.ceil(this.props.dataSource.length / rowsPerPage),\r\n            displayDataIndex: this.getDisplayDataIndex(1, rowsPerPage),\r\n         })\r\n    }\r\n\r\n    onPageNumberChange(pageNumber: number, rowsPerPage: RowsPerPage) {\r\n        this.setState({\r\n            currentPageNumber: pageNumber,\r\n            displayDataIndex: this.getDisplayDataIndex(pageNumber, rowsPerPage),\r\n         })\r\n    }\r\n\r\n    PageLinks() {\r\n        const { currentPageNumber, totalPages, rowsPerPage } = this.state;\r\n        let pageLinks = [];\r\n        for (let i:number = 1; i <= totalPages; i++) {\r\n            const pageNumber = i;\r\n          pageLinks.push(<li onClick={() => this.onPageNumberChange(pageNumber, rowsPerPage)} className={pageNumber === currentPageNumber ? \"active\" : \"waves-effect\"} key={i}><a href=\"#\">{pageNumber}</a></li>);\r\n        }\r\n\r\n        return pageLinks;\r\n    }\r\n\r\n    public render() {\r\n        const sortedSchema: Schema<T>[] = _.orderBy(this.props.schema, [o => o.index]);\r\n        const { startIndex, endIndex } = this.state.displayDataIndex;\r\n        const totalRows = this.props.dataSource.length;\r\n        const { currentPageNumber, totalPages, rowsPerPage } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <FlatCard title={this.props.title}>\r\n\r\n                    <StyledTable className=\"centered\">\r\n                        <thead>\r\n                            <tr>{sortedSchema.map(s => (<th key={s.index}>{s.label}</th>))}</tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {this.props.dataSource.slice(startIndex, endIndex).map((data, index) => (\r\n                                <tr key={index}>{sortedSchema.map((s, subIndex) => (<td key={subIndex}>{s.value(data)}</td>))}</tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </StyledTable>\r\n                    {// ibang dev tong component na to. mejo challenging wahaha. pero connected dapat sa adapter.\r\n                    }\r\n                    <PaginationDiv className=\"row\">\r\n\r\n                        <StyledUl className=\"pagination noselect\">\r\n                            <li><span>&nbsp;&nbsp;&nbsp;Rows per page&nbsp;&nbsp;</span></li>\r\n                            <li> <select defaultValue={this.state.rowsPerPage} className=\"browser-default\" onChange={e => this.onRowsPerPageChange(parseInt(e.target.value))}>\r\n                                <option value={RowsPerPage.Twenty}>{RowsPerPage.Twenty}</option>\r\n                                <option value={RowsPerPage.Fifty}>{RowsPerPage.Fifty}</option>\r\n                                <option value={RowsPerPage.OneHundred}>{RowsPerPage.OneHundred}</option>\r\n                            </select></li>\r\n                            <li>&nbsp;&nbsp;&nbsp;&nbsp;</li>\r\n                            <li><span>{startIndex + 1} - {endIndex + 1} of {totalRows}</span></li>\r\n\r\n                            <li className={currentPageNumber > 1 ? \"waves-effect\" : \"disabled\"}><a href=\"#\" onClick={() => currentPageNumber > 1 ? this.onPageNumberChange(currentPageNumber - 1, rowsPerPage) : null}><i className=\"material-icons\">chevron_left</i></a></li>\r\n                            \r\n                            {this.PageLinks()}\r\n\r\n                            <li className={currentPageNumber !== totalPages ? \"waves-effect\" : \"disabled\"}><a href=\"#\" onClick={() => currentPageNumber !== totalPages ? this.onPageNumberChange(currentPageNumber + 1, rowsPerPage) : null}><i className=\"material-icons\">chevron_right</i></a></li>\r\n                        \r\n                        \r\n                        </StyledUl>\r\n                    </PaginationDiv>\r\n\r\n                </FlatCard>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\DataFilter.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\CardCollection.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\Collection.tsx",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Card\\index.ts",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Data\\index.ts",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Nav\\index.ts",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\GlobalStyle.ts",[],"C:\\Users\\lunch\\Desktop\\Schooly\\demo\\src\\Components\\Shared\\index.ts",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":9,"column":9,"nodeType":"81","endLine":9,"endColumn":79},{"ruleId":"79","severity":1,"message":"80","line":116,"column":176,"nodeType":"81","endLine":116,"endColumn":188},{"ruleId":"79","severity":1,"message":"80","line":157,"column":97,"nodeType":"81","endLine":157,"endColumn":216},{"ruleId":"79","severity":1,"message":"80","line":161,"column":108,"nodeType":"81","endLine":161,"endColumn":238},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]